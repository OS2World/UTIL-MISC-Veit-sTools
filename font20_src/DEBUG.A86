b2h:
     and al,00f
     add ax,'0'
     cmp al,'9'
     if a add al,-'0'-10+'A'
     mov ah,01e
     ret


debug_ax_bx:

push ds
  push 0b800
  pop ds

  push ax
    mov ah,010
    int 016
  pop ax

  push ax
    shr ax,12
    call b2h
    mov [0*2],ax
  pop ax

  push ax
    shr ax,8
    call b2h
    mov [1*2],ax
  pop ax

  push ax
    shr al,4
    call b2h
    mov [2*2],ax
  pop ax

  push ax
    call b2h
    mov [3*2],ax
  pop ax

  push ax
    mov al,bh
    shr al,4
    call b2h
    mov [6*2],ax
  pop ax

  push ax
    mov al,bh
    call b2h
    mov [7*2],ax
  pop ax

  push ax
    mov al,bl
    shr al,4
    call b2h
    mov [8*2],ax
  pop ax

  push ax
    mov al,bl
    call b2h
    mov [9*2],ax
  pop ax


  mov b [80*2-2+0],'y'
  mov b [80*2-2+1],01e

  cmp ah,000
  ;jne ll1

  push ax
    mov ah,010
    int 016
  pop ax

ll1:

pop ds

ret
